#!/usr/bin/env bash

# Exit on failure
set -e

# Records permissions of everything under dotfiles and stores it, for
# recreation later since git doesn't store file permission bits.
# To avoid potentially storing lots of useless info, standard git
# permission modes (755/644) are not recorded.

# top dir
topdir=$(readlink -f ${BASH_SOURCE[0]}); topdir=${topdir%/bin/*}

cat > permissions.dotfiles <<-EOF
	# non-standard octal permissions for dotfiles
	# generated by ${topdir}/bin/${BASH_SOURCE[0]##*/}

EOF
pushd ${topdir} > /dev/null || exit 1
find dotfiles \
	\( -name .git -a -type d -prune \) -o \
	\( -name .svn -a -type d -prune \) -o \
	\( -name .hg -a -type d -prune \) -o \
	\( -name .bzr -a -type d -prune \) -o \
	-type d \
	-print | xargs stat -c "%a %n" | \
	grep -v '^755 ' >> permissions.dotfiles
find dotfiles \
	\( -name .git -a -type d -prune \) -o \
	\( -name .svn -a -type d -prune \) -o \
	\( -name .hg -a -type d -prune \) -o \
	\( -name .bzr -a -type d -prune \) -o \
	-type f \
	-print | xargs stat -c "%a %n" | \
	grep -v '^644 ' >> permissions.dotfiles

# Fix permissions on insecure shell profiles
perl -pe 's!^... (dotfiles/.(?:bash|profile|zsh).*)$!600 $1!g' -i permissions.dotfiles

popd > /dev/null
